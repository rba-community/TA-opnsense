{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Step 1<pre><code>    Install and configure OPNsense Add-on for Splunk\n</code></pre> <ul> <li>Complete logging prerequisites</li> <li>Install on Indexers, Search Heads</li> <li>Configure inputs</li> </ul> <p>See Documentation  View on Splunkbase</p> Step 2<pre><code>    Install and configure OPNsense App for Splunk\n</code></pre> <p></p> <ul> <li>Install dependencies</li> <li>Install only on Search Heads</li> <li>(recommended) Configure app</li> </ul> <p>See Documentation  View on Splunkbase</p>"},{"location":"landing-page/","title":"OPNsense Add-on (TA-opnsense)","text":"<p>Disclaimer</p> <p>This Splunk App is community driven and not affiliated with the official OPNsense\u00ae Firewall. As such, the included documentation does not contain information on how to get started with this firewall. Rather, this documentation serves as a guide to help visualize the data in Splunk. Please visit https://opnsense.org/ for documentation on installing/configuring your own OPNsense firewall.</p> <p>The OPNsense Add-on allows Splunk data administrators to map the OPNsense\u00ae Firewall events to the CIM enabling the data to be used with other Splunk Apps, such as the OPNsense App for Splunk.</p>"},{"location":"landing-page/#assumptions","title":"Assumptions","text":"<p>This documentation assumes the following:</p> <ol> <li>You have a working OPNsense firewall.</li> <li>You have a working Splunk environment.</li> <li>Basic understanding of Splunk and OPNsense.</li> </ol>"},{"location":"landing-page/#about","title":"About","text":"Info Description Version 1.5.7 - Splunkbase | GitHub CIM 5.x, 4.x Vendor Product Version OPNsense\u00ae 22, 23 <p>Get Started</p>"},{"location":"getting-started/configure-enrichment/","title":"Configure Enrichment","text":"Optional Step <p>Mapping interfaces to their names can help in being able to quickly identify them in Splunk (i.e. <code>vmx0</code> -&gt; <code>LAN</code>). This step can be skipped if enrichment is not required.</p> <p>The steps to setup enrichment for this add-on utilize Splunk Lookups. For more information on lookups see Splunk Docs: About lookups.</p> <p>Steps to configure enrichment:</p> <ol> <li>Create a CSV Lookup.</li> <li>Create a Lookup Definition.</li> <li>Create an Automatic Lookup</li> </ol> Tip <p>To get a full list of interfaces being used in OPNsense:</p> <p>From the OPNsense UI, navigate to Interfaces &gt; Assignments.</p>"},{"location":"getting-started/configure-enrichment/#create-a-csv-lookup","title":"Create a CSV Lookup","text":""},{"location":"getting-started/configure-enrichment/#method-1-use-the-lookup-editor","title":"Method 1 - Use the Lookup Editor","text":"<p>Recommended</p> <p>The lookup editor may be the easiest way to create and mange lookups in Splunk. You can download and install the Lookup Editor from Splunkbase: Lookup Editor.</p> <p>Once installed, the lookup editor can be used to create a new CSV lookup.</p> <ol> <li>Open the Lookup Editor in Splunk Web.</li> <li>Click \"Create a New Lookup\" &gt; CSV lookup.</li> <li>Give the lookup a descriptive name (i.e. opn_interfaces.csv).</li> <li>Choose which App context this lookup will be stored in (i.e. Search &amp; Reporting).</li> <li>Leave the \"User-only\" box uncheked. This will give the lookup the global scope permissions it needs.</li> <li>Create column headers (row 1). These headers will be referenced later.</li> <li> <p>Populate the remaing rows with the interface name mappings.</p> Example host interface interface_name opnsense-01 em0 LAN opnsense-01 em1 WAN opnsense-01 vmx1 IOT opnsense-01 wg0 WIREGUARD opnsense-02 vmx1 LAN opnsense-02 vmx2 WAN </li> <li> <p>After saving, move to Create a Lookup Definition.</p> </li> </ol>"},{"location":"getting-started/configure-enrichment/#method-2-create-and-upload-a-new-csv-file","title":"Method 2 - Create and Upload a new CSV file","text":"<p>A lookup file can be created outside of Splunk and then uploaded via the web interface.</p> <ol> <li>Use an editor to create a file in CSV format.</li> <li>Create column headers (row 1). These headers will be referenced later.</li> <li> <p>Populate the remaing rows with the interface name mappings.</p> Example opn_interfaces.csv<pre><code>host,interface,interface_name\nopnsense-01,em0,LAN\nopnsense-01,em1,WAN\nopnsense-01,vmx1,IOT\nopnsense-01,wg0,WIREGUARD\nopnsense-02,vmx1,LAN\nopnsense-02,vmx2,WAN\n</code></pre> </li> <li> <p>Be sure to save the file with a <code>.csv</code> extension.</p> </li> <li>Open Splunk Web.</li> <li>Navigate to Settings &gt; Lookups &gt; Lookup table files (click \"+ Add new\")</li> <li>Select the Destination App (i.e. Search &amp; Reporting).</li> <li>Upload the file.</li> <li>Provide the Destination filename. This can be the same name as the one created (i.e. opn_interfaces.csv).</li> <li>Once saved, Navigate back to Settings &gt; Lookups &gt; Lookup table files, if you are not already there.</li> <li>Search for the name of the file you just uploaded.</li> <li>Modify the permissions for the file by clicking \"Permissions.\"</li> <li>Select \"All apps (system)\" from the two radio options.</li> <li>Check \"Read\" permissions for Everyone. Write permissions can be given as needed (typically set to admin &amp; power).</li> <li>After saving, move to Create a Lookup Definition.</li> </ol>"},{"location":"getting-started/configure-enrichment/#create-a-lookup-definition","title":"Create a Lookup Definition","text":"<p>After the CSV lookup has been created, a lookup definition needs to be created.</p> <ol> <li>In Splunk Web, Navigate to Settings &gt; Lookups &gt; Lookup definitions (click \"+ Add new\").</li> <li>Choose a destination app, or leave as default.</li> <li>Give the lookup a name (i.e. opn_interfaces)</li> <li>Select the previously created CSV lookup from the dropdown.</li> <li>Click the \"Advanced\" checkbox.</li> <li>Click the \"Case Sensitive Match\" checkbox to disable case sensitive matching.</li> <li>Once saved, Navigate back to Settings &gt; Lookups &gt; Lookup definitions.</li> <li>Search for the name of the lookup definition you just created.</li> <li>Modify the permissions for the file by clicking \"Permissions.\"</li> <li>Select \"All apps (system)\" from the two radio options.</li> <li>Check \"Read\" permissions for Everyone. Write permissions can be given as needed (typically set to admin &amp; power).</li> <li>After saving, move on to Create Automatic Lookup</li> </ol>"},{"location":"getting-started/configure-enrichment/#create-an-automatic-lookup","title":"Create an Automatic Lookup","text":"<p>After the Lookup definition has been created, an automatic lookup has to be configured for automatic enrichment.</p> <ol> <li>In Splunk Web, Navigate to Settings &gt; Lookups &gt; Automatic lookups (click \"+ Add new\").</li> <li>Choose a destination app, or leave as default.</li> <li>Give the lookup a name (i.e. opn_interfaces_auto_lookup)</li> <li>Select the previously created lookup definition from the dropdown.</li> <li>For the \"Apply to\" field, select sourcetype and type <code>opnsense:filterlog</code>.</li> <li> <p>For the input fields, first specify the interface field from the created lookup. Then type <code>dest_int</code> for the second field.</p> Example <p><code>field_from_lookup</code> = <code>dest_int</code></p> <pre><code>interface = dest_int\n</code></pre> </li> <li> <p>For the next input field, set <code>host</code> equal to a blank field. There is no need to rename this field.</p> Example <p><code>host</code> =</p> </li> <li> <p>For the output fields, first specify the interface name field from the created lookup. Then type <code>dest_int_name</code> for the second field.</p> Example <p><code>field_from_lookup</code> = <code>dest_int_name</code></p> <pre><code>interface_name = dest_int_name\n</code></pre> <ol> <li>Once saved, Navigate back to Settings &gt; Lookups &gt; Automatic lookups.</li> <li>Search for the name of the automatic lookup you just created.</li> <li>Modify the permissions for the file by clicking \"Permissions.\"</li> <li>Select \"All apps (system)\" from the two radio options.</li> <li>Check \"Read\" permissions for Everyone. Write permissions can be given as needed (typically set to admin &amp; power).</li> <li>Click Save.</li> </ol> </li> </ol>"},{"location":"getting-started/logging-architecture/","title":"Log Collection Architecture","text":"<p>The following diagram shows a basic logging architecture to get data from the OPNsense firewall to Splunk. For more information on installation see Where to install.</p>"},{"location":"getting-started/logging-architecture/#syslog-server-considerations","title":"Syslog Server Considerations","text":"<p>It is recommended to use an intermediate syslog server with a Splunk Universal Forwarder installed. This allows for reliable and secure data collection in Splunk. For more information on syslog and Splunk, see the (SYSLOG) Syslog Data Collection section of the Splunk Validated Architectures white paper.</p> <p>If you want to simply your deployment you can choose to send syslog data directly to Splunk. For more information on collecting data from TCP/UDP ports see Splunk Docs: Get data from TCP and UDP ports.</p> <p>This documentation will provide steps on configuring inputs from data being collected by a syslog server. See the Guide: Syslog for onboarding data via rsyslog/syslog-ng in this documentation.</p>"},{"location":"getting-started/logging-architecture/#single-instance-deployment","title":"Single instance deployment","text":"<p>When you install this add-on to a single Splunk Enterprise instance, that instance serves as both search head and indexer and provides both search and storage capability. A single instance deployment can support a few users running concurrent searches, which is ideal for a small test environment.</p>"},{"location":"getting-started/logging-architecture/#distributed-deployment","title":"Distributed deployment","text":"<p>Distributed deployments consist of separate instances for indexers and search heads. In both single instance and distributed deployments using a universal forwarder to get data in is recommended.</p>"},{"location":"getting-started/prerequisites/","title":"Prerequisites","text":""},{"location":"getting-started/prerequisites/#opnsense-logging-requirement","title":"OPNsense logging requirement","text":"<p>Do not select the <code>rfc5424</code> log format when setting up a new logging target. Doing so will cause this add-on to not properly extract fields.</p> <p>Leave <code>rfc5424</code> unchecked (see example below)</p> <p></p>"},{"location":"getting-started/where-to-install/","title":"Where to Install","text":"<p>For detailed information on where to install Splunk Apps/add-ons, including best practices, can be found at Splunk Docs: About Installing Splunk add-ons</p>"},{"location":"getting-started/where-to-install/#standalone-deployments","title":"Standalone Deployments","text":"<p>Install this add-on to the single instance. For more information see Splunk Docs: Install add-on in a single-instance Splunk deployment</p>"},{"location":"getting-started/where-to-install/#distributed-deployments","title":"Distributed Deployments","text":"Splunk Instance type Supported Required Comments Search Heads Yes Yes Install this add-on to all search heads. Indexers Yes Conditional Not required if heavy forwarders are used to collect data, required if not. Heavy Forwarders Yes Conditional Required, if HFs are used to collect this data source. Universal Forwarders Yes Not required The add-on includes an inputs.conf file that is disabled by default. This can be used to create an input on the forwarder if enabled. <p>The installation steps for deploying Apps/add-ons in a distributed environment can be found at Splunk Docs: Install an add-on in a distributed Splunk deployment</p>"},{"location":"getting-started/where-to-install/#distributed-deployment-compatibility","title":"Distributed Deployment Compatibility","text":"Distributed deployment feature Supported Comments Search Head Clusters Yes You can install this add-on to a search head cluster. Indexer Clusters Yes You can install this add-on to a indexer cluster. Deployment Server Yes You can use a deployment server to push this add-on to Splunk Universal Forwarders. <p>* For more information, see Splunk's documentation on installing Add-ons.</p>"},{"location":"getting-started/configure-inputs/configure-inputs/","title":"Configure Splunk Input","text":"<p>Objective: Set the sourcetype to <code>opnsense</code> in the inputs.conf file on the forwarder.</p>"},{"location":"getting-started/configure-inputs/configure-inputs/#create-new-indexes","title":"Create new indexes","text":"Optional <p>If you do not wish to create a new index, skip to Splunk Universal Forwarder Configuration.</p> <p>Splunk stores data in indexes. This add-on may be configured to send to a custom event index instead of the default index, main. For more information and steps to create a new index, see Splunk Docs: Create events indexes.</p>"},{"location":"getting-started/configure-inputs/configure-inputs/#purpose-for-creating-new-indexes","title":"Purpose for creating new indexes","text":"<p>The out of the box Splunk configuration stores all data in the default index, main. It is encouraged to create a new index to ensure optimal performance, for setting retention policies, and for providing stricter access controls. For more information about how Splunk indexes work with add-ons, see Splunk Docs: Add-ons and indexes.</p> <p>OPNsense has a variety of data sources that can be broken up in to separate indexes. For more information and some examples on creating and utilizing indexes see the Guide: Index Utilization in this documentation.</p>"},{"location":"getting-started/configure-inputs/configure-inputs/#splunk-universal-forwarder-configuration","title":"Splunk Universal Forwarder Configuration","text":"<p>Download the latest Splunk Universal Forwarder (UF) appropriate for your server.</p> Don't have a syslog server setup yet? <p>See Syslog Setup for guided steps. If you don't want to use a syslog server see Splunk Docs: Get data from TCP and UDP ports and skip these steps.</p> <p>Install the UF according to Splunk Docs: Install the Universal Forwarder on the server designated as your syslog server.</p> <p>Once installed the configurations can be made. The following is a sample inputs.conf that can be pushed using a deployment server or configured on the UF itself.</p> inputs.conf<pre><code>[monitor:///var/log/remote/opnsense]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\n# optionally specify an index, if configured.\nindex = netfw\n</code></pre> <p>Push the configuration to the forwarder, if using a deployment server, or restart the UF if configuring on the UF itself.</p>"},{"location":"getting-started/configure-inputs/configure-inputs/#verify","title":"Verify","text":"<p>Verify the setup has completed successfully by navigating to Splunk web and running a search similar to the following:</p> <pre><code>index=&lt;chosen index&gt; sourcetype=opnsense*\n</code></pre> <p>If you see data then you are all set! Proceed to Configuring Modular Inputs or start visualizing your data by downloading and installing the OPNsense App for Splunk.</p> <p>If you are not seeing your data, see Troubleshooting Monitoring Inputs.</p>"},{"location":"getting-started/configure-inputs/configure-modinput/","title":"Configure Modular Input","text":"<p>The TA-opnsense modular input will interact with the OPNsense API using GET requests. This allows for system information to be returned to enrich the already ingested Splunk data. For more information on what data is collected by this modular input see Reference: Modular Input in this documentation.</p>"},{"location":"getting-started/configure-inputs/configure-modinput/#overview","title":"Overview","text":"<ol> <li>Perform prerequisites</li> <li>Create Account</li> <li>Create Input</li> </ol> Tested Versions <p>OPNsense v21.7</p> <p>Add-on Version 1.4.0</p>"},{"location":"getting-started/configure-inputs/configure-modinput/#prerequisites","title":"Prerequisites","text":"<ol> <li>Obtain API Credentials.</li> <li>FQDN/IP of the OPNsense instance (multiple instances may be setup through the interface).</li> <li>(optional) CA Certificate for OPNsense instance.</li> <li>Splunk must be able to communicate to the firewall directly through the web port (default 443/tcp) or through a proxy.</li> </ol>"},{"location":"getting-started/configure-inputs/configure-modinput/#obtain-api-credentials","title":"Obtain API Credentials","text":"<ol> <li>Log in to the OPNsense web interface.</li> <li>Navigate to System &gt; Access &gt; Users.</li> <li>Create a new user or edit an existing user.</li> <li>Scroll down to the <code>API keys</code> section, click the \"+\" to create new API credentials. This downloads an \"apikey.txt\" file containing the credentials for the API. These will be used in later steps.</li> </ol>"},{"location":"getting-started/configure-inputs/configure-modinput/#obtain-ca-certificate","title":"Obtain CA Certificate","text":"<p>Optional</p> <p>The Certificate Authority (CA) certificate can be used to verify authenticity of the device you are connecting to.</p> <ol> <li>Log in to the OPNsense web interface.</li> <li> <p>Navigate to System &gt; Trust &gt; Authorities.</p> Not Seeing any Certificates? <p>If no certificates show up in this view, this could mean that you are using the default self-signed Web certificate from OPNsense. If this is the case, skip these steps and ensue the \"Verify Certificate\" checkbox is not checked when setting up the modular input. For better security, it is recommended to create a new certificate for the OPNsense web interface (see OPNsense Documentation for more information).</p> </li> <li> <p>Export the CA cert of the Authority being used for the web interface.</p> </li> <li>Place the CA Certificate into <code>$SPLUNK_HOME/etc/auth</code>. It may be easier to create a new directory to keep this certificate separate (i.e. <code>$SPLUNK_HOME/etc/auth/opnsense_certs</code>).</li> </ol>"},{"location":"getting-started/configure-inputs/configure-modinput/#create-account","title":"Create Account","text":"<p>At least one account is needed for the modular input to work.</p> <p></p> <ol> <li>Verify Prerequisites have been completed before proceeding.</li> <li>Log in to the Splunk web interface.</li> <li> <p>Navigate to the OPNsense Add-on for Splunk &gt; Configuration (Tab).</p> Not seeing the OPNsense Add-on? <p>The OPNsense Add-on for Splunk must be set to visible in order to configure the modular input.</p> <ol> <li>In Splunk web, navigate to the \"Manage Apps\" view by clicking the gear icon on the Launcher page or click \"Manage Apps\" from the \"Apps\" dropdown next to the Splunk logo on the top left of the screen.</li> <li>In the app list search for \"OPNsense Add-on\" and click \"Edit properties\" on the right side.</li> <li>Ensure \"Visible\" is set to Yes and save.</li> </ol> </li> <li> <p>Add a new Account.</p> </li> <li>Enter a name for the account.</li> <li>Enter the API credentials previously created.</li> <li>Enter the IP/FQDN of the OPNsense instance.</li> <li>If different from default port of 443, enter the port number being used.</li> <li> <p>(Optional) Enter the certificate path relative to <code>$SPLUNK_HOME/etc/auth</code> or as an absolute path.</p> Example <p>relative path: <code>opnsense_certs/OPNsense.crt</code></p> <p>absolute path: <code>/opt/splunk/etc/auth/opnsense_certs/OPNsense.crt</code></p> </li> <li> <p>Uncheck the box if you are not using a certificate to verify.</p> </li> <li>Click add.</li> <li>(optional) Configure proxy.</li> <li>(optional) Set logging level.</li> <li>Proceed to create an input.</li> </ol> <p></p>"},{"location":"getting-started/configure-inputs/configure-modinput/#create-input","title":"Create Input","text":"<ol> <li>An account is needed before proceeding.</li> <li>Navigate to the Input tab.</li> <li>Click \"Create New Input.\"</li> <li>Enter a unique name.</li> <li>Set an interval to run in seconds or a valid cron schedule.</li> <li>Select an index.</li> <li>Select the correct account credentials for the input.</li> <li>Click add.</li> </ol>"},{"location":"getting-started/configure-inputs/configure-modinput/#verify","title":"Verify","text":"<p>Once completed the modular input will immediately run. To verify open up a search and run a similar query:</p> <pre><code>index=&lt;your index&gt; sourcetype=opnsense:system\n</code></pre> <p>If data does not appear within a few minutes, see Troubleshooting Modular Inputs.</p>"},{"location":"getting-started/troubleshooting/troubleshoot-inputs/","title":"Troubleshoot Monitoring Inputs","text":"<p>There is a variety of issues when getting new data into Splunk. Below are a few of the most common issues:</p> Issue Description Solution Splunk cannot read the file If the user running Splunk (default is <code>splunk</code>) cannot read the contents of the file, the data will not be sent to Splunk. log in as the Splunk user and verify the contents can be read. If not, update the permissions of the file to allow read access to the Splunk user. Incorrect timestamps Having the incorrect time setup on either the Splunk instance or syslog server may result in not ingesting the data. In Splunk web, try switching the time range to \"All Time\" when looking for the data. If the data is found and the incorrect time is observed, update the servers to the correct time and consider utilizing a NTP server for proper time synchronization. Splunk Forwarder communication It is possible that the Splunk Universal Forwarder does not have a connection to the Splunk instance. Verify connection by running the following command on the universal forwarder: <code>$SPLUNK_HOME/bin/splunk list forward-server</code>. $SPLUNK_HOME is the installation directory. The output from this command will show active/inactive connections to the Splunk Instance. Alternatively the internal logs can be searched in Splunk Web. Run the following command on the search head: <code>index=_internal source=*metrics.log* tcpin_connections | stats count by sourceIp</code>. The output of this search will show a list of sources connecting to the Splunk Instance. <p>For more troubleshooting steps, see Splunk Docs: Troubleshooting Data.</p>"},{"location":"getting-started/troubleshooting/troubleshoot-modinputs/","title":"Modular Input Troubleshooting","text":"<p>If no logs appear in the index you specified after configuring the input, use the following to troubleshoot.</p> <ol> <li>Set the logging mode to \"Debug\" on the Configuration Tab.</li> <li>Search the internal logs for errors:</li> </ol> <pre><code>index=_internal sourcetype=taopnsense:log\n</code></pre>"},{"location":"guides/guide-collect-netflows/","title":"Collect Netflows from OPNsense","text":"<p>Todo</p> <p>Collect netflows using Splunk stream</p>"},{"location":"guides/guide-index-utilization/","title":"Index Utilization Guide","text":"<p>The out of the box Splunk configuration stores all data in the default index, main. It is encouraged to create a new index to ensure optimal performance, for setting retention policies, and for providing stricter access controls. For more information about how Splunk indexes work with add-ons, see Splunk Docs: Add-ons and indexes.</p> <p>OPNsense has a variety of data sources that can be broken up in to separate indexes. The below table is an example of the data can be split up in to different indexes.</p> Index Sourcetype(s) netauth opnsense:access netdhcp opnsense:dhcpd netfw opnsense:filterlog netfwsystem opnsense, opnsense:cron, opnsense:system, opnsense:syslog netids opnsense:suricata, opnsense:suricata:json netproxy opnsense:squid, opnsense:lighttpd <p>New indexes can be created through configuration files or through Splunk web. See Splunk Docs: Create events indexes for more information.</p> <p>This guide walks through the following steps to utilize created indexes:</p> <ol> <li>Set index at input time</li> <li>Change index at index time</li> </ol>"},{"location":"guides/guide-index-utilization/#set-index-at-input-time","title":"Set index at input time","text":"<p>Setting the index at input time can save some resources on the indexers. This requires a more advanced syslog configuration to ensure the files are properly broken up by data type.</p> <p>If you followed the the guide for Syslog Setup then you should have multiple files broken up by the data source (i.e. filterlog, suricata, dhcpd). We will create inputs to assign sourcetypes based on these files.</p>"},{"location":"guides/guide-index-utilization/#configure-inputs","title":"Configure inputs","text":"inputs.conf example inputs.conf<pre><code>[monitor:///var/log/remote/opnsense/*/filterlog.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netfw\n\n[monitor:///var/log/remote/opnsense/*/access.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netauth\n\n[monitor:///var/log/remote/opnsense/*/dhcpd.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netdhcp\n\n[monitor:///var/log/remote/opnsense/*/suricata.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netids\n\n[monitor:///var/log/remote/opnsense/*/squid.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netproxy\n\n[monitor:///var/log/remote/opnsense/*/lighttpd.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netproxy\n\n[monitor:///var/log/remote/opnsense/*/openvpn.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netvpn\n\n[monitor:///var/log/remote/opnsense/*/cron.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netfwsystem\n\n[monitor:///var/log/remote/opnsense/*/catchall.log]\ndisabled = 0\nhost_segment = 5\nsourcetype = opnsense\nindex = netfwsystem\n</code></pre>"},{"location":"guides/guide-index-utilization/#change-index-at-index-time","title":"Change index at index time","text":"<p>The data can be changed to the correct index during index time operations. In this example <code>INGEST_EVAL</code> will be used. For more information about INGEST_EVAL see Splunk Docs: Ingest Eval.</p> <p>These steps assume the data onboarding process, including index creation, has been completed and data is ready to be collected in Splunk.</p> <p>The following changes will need to be made on the indexers.</p> <ol> <li>Open the configuration file located at $SPLUNK_HOME/etc/apps/TA-opnsense/local/props.conf. This file and directory may have to be created.</li> <li> <p>Create a transforms statement for the <code>opnsense</code> sourcetype. This should be the sourcetype set in the inputs.conf file (see Configure Inputs) for more information.</p> $SPLUNK_HOME/etc/apps/TA-opnsense/localprops.conf<pre><code>[opnsense]\nTRANSFORMS-z_opn_change_index = opn_change_index\n</code></pre> <p>Notice the \"z\" at the beginning of the name (TRANSFORMS-<code>z</code>_opn_change_index). This will cause this transform to run later in the index operations. This is important because this add-on utilizes a sourcetype transforms that must run before this transform.</p> </li> <li> <p>Now a transform will need to be created at $SPLUNK_HOME/etc/apps/TA-opnsense/local/transforms.conf. This file may have to be created.</p> </li> <li> <p>Create an <code>INGEST_EVAL</code> statement changing the data to the correct index based off the sourcetype.</p> $SPLUNK_HOME/etc/apps/TA-opnsense/local/transforms.conf<pre><code>[opn_change_index] # this name MUST match the name in props.conf\nINGEST_EVAL = index=case(match(sourcetype, \"dhcpd\"), \"netdhcp\", match(sourcetype, \"lighttpd|squid\"), \"netproxy\", match(sourcetype, \"access\"), \"netauth\", match(sourcetype, \"suricata\"), \"netids\" , match(sourcetype, \"cron|system|syslog|opnsense$\"), \"netfwsystem\" , true(), index)\n</code></pre> <p>This uses a case statement to perform a regex match on the sourcetype to then change to the appropriate index. Note that the match statement does not have to be used here and a simple <code>sourcetype==\"opnsense:dhcpd\"</code> statement could be used.</p> </li> <li> <p>After you finish making the appropriate changes to the INGEST_EVAL command, splunk will need to be restarted for the changes to take affect.</p> </li> <li>Verify by searching the expected indexes for the data.</li> </ol>"},{"location":"guides/guide-index-utilization/#troubleshoot","title":"Troubleshoot","text":"<p>Ensure that you ingest_eval command works by pasting it in to Splunk web using an eval statement replacing <code>index</code> with another name.</p> <p>Example</p> <pre><code>index=* sourcetype=opnsense*\n| eval test=case(match(sourcetype, \"dhcpd\"), \"netdhcp\", match(sourcetype, \"lighttpd|squid\"), \"netproxy\", match(sourcetype, \"access\"), \"netauth\", match(sourcetype, \"suricata\"), \"netids\" , match(sourcetype, \"cron|system|syslog|opnsense$\"), \"netfwsystem\" , true(), index)\n| stats count by sourcetype, test\n</code></pre> <p>If there are no errors and the command works as expected, be sure that splunk was restarted. <code>$SPLUNK_HOME/bin/splunk btool check</code> can also be run to see if there are any errors in the configuration file.</p> <p>If there are no errors, check the spelling in the props.conf and transforms.conf for the name given. The name set in props.conf must match the stanza in transforms.conf.</p>"},{"location":"guides/guide-intrusion-detection/","title":"Intrusion Detection Logging Setup","text":"<p>This guide assumes that you already have the packaged necessary for the Intrusion detection service. For more information see OPNsense Docs: Intrusion Detection.</p> <ol> <li>Log in to OPNsense.</li> <li>Navigate to Services &gt; Intrusion Detection &gt; Administration.</li> <li>Click the \"advanced mode\" toggle.</li> </ol> <p>It is recommended to use the eve syslog output setting. This will provide the most verbose output. Additionally, the payload can be logged by checking the \"log package payload\" box.</p> <p>Once you are satisfied with all other settings, click enable and then apply. For more information on all other settings see OPNsense Docs: Intrusion Detection.</p>"},{"location":"guides/guide-syslog/","title":"Syslog Guide","text":"<p>Sending data to a syslog server where a Splunk forwarder is monitoring the files can improve the data collection to Splunk. A Splunk forwarder automatically load-balances data to all indexers in a distributed environment and can be setup with TLS and other setting to ensure the data transmission is secure and reliable. Utilizing a syslog server will also help prevent gaps in data when Splunk needs to restart for maintenance or unplanned shutdowns. For more information see Splunk answers and Splunk Docs: Forwarder Manual. More information on syslog and Splunk, see the (SYSLOG) Syslog Data Collection section of the Splunk Validated Architectures white paper.</p> <p>The following will walk through an example of setting up syslog using Rsyslog. Syslog-ng example can be found at the below blog posts:</p> <ul> <li>High Performance Syslog - Part 1</li> <li>High Performance Syslog - Part 2</li> <li>Using Syslong-ng with Splunk</li> </ul>"},{"location":"guides/guide-syslog/#data-on-boarding-using-rsyslog","title":"Data on-boarding using Rsyslog","text":"<p>Rsyslog is a default package on most linux distros. The OPNsense firewall can be setup to send logs via syslog to a configured Rsyslog server for a Splunk Forwarder to monitor. Below is a basic configuration to get started with data on-boarding.</p> <p>Note</p> <p>The following does not reflect rsyslog best practices but could be used as a starting point.</p>"},{"location":"guides/guide-syslog/#rsyslog-basic-configuration","title":"Rsyslog Basic Configuration","text":"<p>Tested with Rsyslog version: rsyslogd 8.32.0 on RHEL/CentOS/Ubuntu</p> <p>The default rsyslog configuration file is located in <code>/etc/rsyslog.conf</code>.</p> <p>Open the rsyslog configuration file with your favorite text editor. Place the following in the configuration file or uncomment if already present:</p>"},{"location":"guides/guide-syslog/#load-modules","title":"Load Modules","text":"<p>Load in the appropriate modules for TCP/UDP</p> <pre><code>module(load=\"imudp\") # provides UDP syslog reception\n</code></pre>"},{"location":"guides/guide-syslog/#file-permissions","title":"File Permissions","text":"<p>The following sets file permissions to <code>root:splunk</code>.</p> <pre><code># OMFILE Global Permissions\nmodule(load=\"builtin:omfile\" dirCreateMode=\"0750\" dirOwner=\"root\" dirGroup=\"splunk\" fileCreateMode=\"0640\" fileOwner=\"root\" fileGroup=\"splunk\")\n\n# Legacy Permissions\n$umask 0027\n$DirCreateMode 0750\n$FileCreateMode 0640\n$DirGroup splunk\n$FileGroup splunk\n</code></pre>"},{"location":"guides/guide-syslog/#event-format-template","title":"Event Format Template","text":"<p>The following is a standard example of how to set a template for an event format. This helps to standardize the logs to work better with Splunk.</p> <pre><code># Event Template\ntemplate(name=\"t_default\" type=\"list\") {\n    property(name=\"timestamp\" dateFormat=\"rfc3339\")\n    constant(value=\" \")\n    property(name=\"fromhost\") # can also be set to 'hostname'\n    constant(value=\" \")\n    property(name=\"syslogtag\")\n    property(name=\"msg\" spifno1stsp=\"on\")\n    property(name=\"msg\" droplastlf=\"on\")\n    constant(value=\"\\n\")\n}\n</code></pre> <p>This will create events similar to the following:</p> <pre><code>2020-02-16T22:47:31-00:00 myserver-003 named[32422]: 136299 10.0.0.5/48300 reply apps.splunk.com is 52.41.47.241\n</code></pre>"},{"location":"guides/guide-syslog/#dynamic-file-templates","title":"Dynamic File Templates","text":"<p>Create reusable templates for easy change-management</p> <pre><code>template (name=\"t_opnsense_filterlog\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/filterlog.log\")\ntemplate (name=\"t_opnsense_suricata\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/suricata.log\")\ntemplate (name=\"t_opnsense_openvpn\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/openvpn.log\")\ntemplate (name=\"t_opnsense_cron\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/cron.log\")\ntemplate (name=\"t_opnsense_squid\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/squid.log\")\ntemplate (name=\"t_opnsense_lighttpd\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/lighttpd.log\")\ntemplate (name=\"t_opnsense_dhcpd\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/dhcpd.log\")\ntemplate (name=\"t_opnsense_catchall\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/catchall.log\")\n</code></pre>"},{"location":"guides/guide-syslog/#create-rulesets","title":"Create rulesets","text":"<p>Rulesets can be useful to chain incoming logs to a specific set of rules.</p> <pre><code>ruleset(name=\"r_opnsense\") {\n  if $programname == 'filterlog' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_filterlog\")\n    stop\n  }\n\n  if $programname == 'suricata' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_suricata\")\n    stop\n  }\n\n  if $programname == 'openvpn' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_openvpn\")\n    stop\n  }\n\n  if $programname == 'cron' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_cron\")\n    stop\n  }\n\n  if $programname == 'squid' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_squid\")\n    stop\n  }\n\n  if $programname == 'lighttpd' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_lighttpd\")\n    stop\n  }\n\n  if $programname == 'dhcpd' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_dhcpd\")\n    stop\n  }\n\n  *.*   action(type=\"omfile\" dynaFile=\"t_opnsense_catchall\")\n}\n</code></pre>"},{"location":"guides/guide-syslog/#input-configuration","title":"Input Configuration","text":"<p>Inputs can be specified with a ruleset to tie them to the previously create rules.</p> <pre><code>input(type=\"imudp\" port=\"514\" ruleset=\"r_opnsense\")\n</code></pre> <p>Once the above has been configured, Save &amp; Close the file. Then restart the rsyslog process:</p> <p><code>systemctl restart rsyslog</code></p> <p>Verify rsyslog is running with: <code>systemctl status rsyslog</code></p> Full Example /etc/rsyslog.conf<pre><code># /etc/rsyslog.conf configuration file for rsyslog\n#\n# For more information install rsyslog-doc and see\n# /usr/share/doc/rsyslog-doc/html/configuration/index.html\n#\n# Default logging rules can be found in /etc/rsyslog.d/50-default.conf\n\n\n#################\n#### MODULES ####\n#################\n\nmodule(load=\"imuxsock\") # provides support for local system logging\n#module(load=\"immark\")  # provides --MARK-- message capability\n\n# provides UDP syslog reception\nmodule(load=\"imudp\")\n# input(type=\"imudp\" port=\"514\")\n\n# provides TCP syslog reception\n#module(load=\"imtcp\")\n#input(type=\"imtcp\" port=\"514\")\n\n# provides kernel logging support and enable non-kernel klog messages\nmodule(load=\"imklog\" permitnonkernelfacility=\"on\")\n\n###########################\n#### GLOBAL DIRECTIVES ####\n###########################\n#\n# OMFILE Global Permissions\nmodule(load=\"builtin:omfile\" dirCreateMode=\"0750\" dirOwner=\"root\" dirGroup=\"splunk\" fileCreateMode=\"0640\" fileOwner=\"root\" fileGroup=\"splunk\")\n\n# Legacy Permissions\n$umask 0027\n$DirCreateMode 0750\n$FileCreateMode 0640\n$DirGroup splunk\n$FileGroup splunk\n\n# Event Template\ntemplate(name=\"t_default\" type=\"list\") {\n    property(name=\"timestamp\" dateFormat=\"rfc3339\")\n    constant(value=\" \")\n    property(name=\"fromhost\") # can also be set to 'hostname'\n    constant(value=\" \")\n    property(name=\"syslogtag\")\n    property(name=\"msg\" spifno1stsp=\"on\")\n    property(name=\"msg\" droplastlf=\"on\")\n    constant(value=\"\\n\")\n}\n\n#\n# Use traditional timestamp format.\n# To enable high precision timestamps, comment out the following line.\n#\n# $ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat\n\n# Filter duplicated messages\n$RepeatedMsgReduction on\n\n# DynaFile Templates\ntemplate (name=\"t_opnsense_filterlog\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/filterlog.log\")\ntemplate (name=\"t_opnsense_suricata\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/suricata.log\")\ntemplate (name=\"t_opnsense_openvpn\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/openvpn.log\")\ntemplate (name=\"t_opnsense_cron\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/cron.log\")\ntemplate (name=\"t_opnsense_squid\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/squid.log\")\ntemplate (name=\"t_opnsense_lighttpd\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/lighttpd.log\")\ntemplate (name=\"t_opnsense_dhcpd\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/dhcpd.log\")\ntemplate (name=\"t_opnsense_catchall\" type=\"string\" string=\"/var/log/remote/opnsense/%HOSTNAME%/catchall.log\")\n\nruleset(name=\"r_opnsense\") {\n  if $programname == 'filterlog' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_filterlog\")\n    stop\n  }\n\n  if $programname == 'suricata' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_suricata\")\n    stop\n  }\n\n  if $programname == 'openvpn' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_openvpn\")\n    stop\n  }\n\n  if $programname == 'cron' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_cron\")\n    stop\n  }\n\n  if $programname == 'squid' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_squid\")\n    stop\n  }\n\n  if $programname == 'lighttpd' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_lighttpd\")\n    stop\n  }\n\n  if $programname == 'dhcpd' then {\n    action(type=\"omfile\" dynaFile=\"t_opnsense_dhcpd\")\n    stop\n  }\n\n  *.*   action(type=\"omfile\" dynaFile=\"t_opnsense_catchall\")\n}\n\ninput(type=\"imudp\" port=\"514\" ruleset=\"r_opnsense\")\n#\n# Where to place spool and state files\n#\n$WorkDirectory /var/spool/rsyslog\n#\n# Include all config files in /etc/rsyslog.d/\n#\n$IncludeConfig /etc/rsyslog.d/*.conf\n</code></pre>"},{"location":"guides/guide-syslog/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Ensure firewall rules are configured to allow the rsyslog listening port (514/udp)</li> <li>Ensure SELinux is not blocking rsyslog from writing to the file. This may occur if you write data outside of <code>/var/log</code>.</li> </ul>"},{"location":"guides/guide-syslog/#basic-log-rotation-strategy-for-syslog-server","title":"Basic Log Rotation Strategy for syslog server","text":"<p>It is necessary to rotate the logs to ensure the disk space does not fill up. Below is a basic example to get started with log rotation.</p> <p>The following uses the builtin package <code>logrotate</code>. The configuration file can be found at <code>/etc/logrotate.conf</code></p> <p>Start by creating a new file in <code>/etc/logrotate.d</code>. For this example, we will use a created file in <code>/etc/logrotate.d/opnsense</code></p> <p>Add the following to the file.</p> /etc/logrotate.d/opnsense<pre><code>/var/log/remote/opnsense/*/*.log\n{\n  rotate 7\n  daily\n  missingok\n  create 0640 root splunk\n  notifempty\n  compress\n  createolddir 750 root splunk\n  olddir /var/log/remote/old\n  dateext\n  dateformat -%Y-%m-%d\n  dateyesterday\n  sharedscripts\n  postrotate\n          /bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` 2&gt; /dev/null || true\n  endscript\n}\n</code></pre> <p>The above may not work for every situation. Please check the man pages for logroate if experiencing issues. It may also be helpful to look at existing configuration files located in <code>/etc/logrotate.d</code> for reference.</p>"},{"location":"guides/guide-syslog/#opnsense-syslog-configuration","title":"OPNsense Syslog Configuration","text":"<p>The following is necessary to now send syslog data from the OPNsense firewall to the newly configured syslog server.</p> <p>Administrator access to the OPNsense Web GUI will be required to perform the following steps.</p> <ol> <li>Log into the OPNsense firewall.</li> <li>Navigate to: System &gt; Settings &gt; Logging/targets.</li> <li> <p>Click the <code>+</code> (plus sign) to add a new syslog destination.</p> </li> <li> <p>Ensure the <code>Enabled</code> checkbox is checked.</p> </li> <li>Transport = UDP(4)</li> <li>Applications = (Leave Blank) to select everything</li> <li>Levels = (Leave default setting)</li> <li>Facilities = (Leave Blank) to select everything</li> <li>Hostname = FQDN or IP of the syslog server configured in previous steps.</li> <li>Port = 514</li> <li> <p>Description = (Optional)</p> </li> <li> <p>Click Save</p> </li> <li>Click Apply</li> </ol>"},{"location":"reference/reference-mod-input/","title":"Modular Input Details","text":"<p>The Modular input pulls select system information from the firewall. Future releases may include additional information. The following table shows the information collected by this input.</p> Collection Type Description System System information including OS, OPNsense Version, Available Updates. Packages Packages installed on the system. Plugins Plugins installed on the system."},{"location":"reference/reference-sourcetypes/","title":"Sourcetypes","text":"<p>Below are a list of sourcetypes which this Add-on uses. It is not necessary to manually set the sourcetype to anything other than <code>opnsense</code> as this add-on will automatically transform the sourcetype to the appropriate value.</p> Source type Description CIM Mapping opnsense:access deprecated v1.5.0 Access Events to OPNsense firewall. Authentication opnsense:audit new v1.5.0 Audit Events to OPNsense firewall (logins/changes). Authentication <code>opnsense:cron</code> Cron Events None <code>opnsense:dhcpd</code> DHCP Events Network Sessions <code>opnsense:filterlog</code> Filterlog Events Network Traffic <code>opnsense:lighttpd</code> Events from the Web interface Web <code>opnsense:openvpn</code> OpenVPN Events Authentication <code>opnsense:suricata</code> <code>opnsense:suricata:json</code> IDS events from suricata Intrusion Detection Network Traffic <code>opnsense:squid</code> Proxy events from Squid Proxy Web <code>opnsense:unbound</code> DNS events from Unbound DNS Network Resolution <code>opnsense:syslog</code> Events from Syslog-ng None"},{"location":"reference/releases/","title":"Release notes for the OPNsense Add-on for Splunk","text":""},{"location":"reference/releases/#v157-aug-21-2024","title":"v1.5.7 Aug 21, 2024","text":""},{"location":"reference/releases/#whats-changed","title":"What's changed","text":"<ul> <li>Splunk Add-on Builder library updates</li> </ul>"},{"location":"reference/releases/#known-issues","title":"Known issues","text":"<p>This version of the OPNsense addon for Splunk has the following known issues. If no issues appear here, no issues have been reported. Issues can be reported on the OPNsense addon for Splunk's Github page.</p>"},{"location":"reference/releases/release-history/","title":"Release history for the OPNsense addon for Splunk","text":"<p>The latest version of the OPNsense addon for Splunk is version 1.5.7. See Release notes for the OPNsense addon for Splunk of the latest version.</p>"},{"location":"reference/releases/release-history/#v156-july-10-2024","title":"v1.5.6 July 10, 2024","text":""},{"location":"reference/releases/release-history/#whats-changed","title":"What's changed","text":"<ul> <li>Initial Release under The RBA Community</li> </ul>"},{"location":"reference/releases/release-history/#v155-may-29-2024","title":"v1.5.5 May 29, 2024","text":""},{"location":"reference/releases/release-history/#whats-changed_1","title":"What's changed","text":"<ul> <li>Fixed logging for openvpn logs - #127 by ChrisSiedler</li> <li>Updated License to SGT</li> </ul>"},{"location":"reference/releases/release-history/#v154-october-5-2023","title":"v1.5.4 October 5, 2023","text":""},{"location":"reference/releases/release-history/#whats-changed_2","title":"What's changed","text":"<ul> <li>Updated Splunk Add-on version to 4.1.3.</li> <li>Updated Splunk Python SDK to version 1.7.4</li> </ul>"},{"location":"reference/releases/release-history/#v153-may-14-2023","title":"v1.5.3 May 14, 2023","text":""},{"location":"reference/releases/release-history/#whats-changed_3","title":"What's changed","text":"<ul> <li>Fixed \"unknown\" action for nat rules #85.</li> <li>Added the field <code>dest_interface</code> for CIM compliance.</li> </ul>"},{"location":"reference/releases/release-history/#known-issues","title":"Known issues","text":"<p>This version of the OPNsense addon for Splunk has the following known issues. If no issues appear here, no issues have been reported. Issues can be reported on the OPNsense addon for Splunk's Github page.</p>"},{"location":"reference/releases/release-history/#v152-dec-15-2022","title":"v1.5.2 Dec 15, 2022","text":"Warning <p>Only applies if you are upgrading from a version &lt; 1.5.0</p> <p>This version includes packages for the new version of Add-on builder (v4.0.0) which may cause API credentials to no longer work after updating. After updating to this version, you may have to re-enter the API credentials for the modular inputs to work again by editing the existing account configurations.</p>"},{"location":"reference/releases/release-history/#whats-changed_4","title":"What's changed","text":"<ul> <li>Updated Add-on builder packages.</li> <li>Updated documentation to address required log formats #67.</li> </ul>"},{"location":"reference/releases/release-history/#v151-nov-30-2021","title":"v1.5.1 Nov 30, 2021","text":"Warning <p>Only applies if you are upgrading from a version &lt; 1.5.0</p> <p>This version includes packages for the new version of Add-on builder (v4.0.0) which may cause API credentials to no longer work after updating. After updating to this version, you may have to re-enter the API credentials for the modular inputs to work again by editing the existing account configurations.</p> <ul> <li>Adding default allowed action for suricata events</li> <li>Updating field extractions for Suricata events in Drop mode - #58</li> <li>Fixed certificate issue when no cert checking is enabled - #61</li> </ul>"},{"location":"reference/releases/release-history/#v150-aug-7-2021","title":"v1.5.0 Aug 7, 2021","text":"Warning <p>This version includes packages for the new version of Add-on builder (v4.0.0) which may cause API credentials to no longer work after updating. After updating to this version, you may have to re-enter the API credentials for the modular inputs to work again by editing the existing account configurations.</p> <ul> <li>deprecating sourcetype \"opnsense:access\" and moving to \"opnsense:audit\"</li> <li>updated CIM mapping for Authentication events</li> <li>updated to latest add-on builder version</li> </ul>"},{"location":"reference/releases/release-history/#v143-july-8-2021","title":"v1.4.3 July 8, 2021","text":"<ul> <li>fixed script to initial an upgrade check - #49</li> <li>added ability to use a cron schedule for the modular input interval - #52</li> <li>added ability to specify port number for modular input - #53</li> </ul>"},{"location":"reference/releases/release-history/#v142-june-2-2021","title":"v1.4.2 June 2, 2021","text":"<ul> <li>Adding support for absolute paths in modular input setup for certificates - #44</li> <li>Fixed issue with the Verify Certificate checkbox not working properly - #47</li> </ul>"},{"location":"reference/releases/release-history/#v141-may-27-2021","title":"v1.4.1 May 27, 2021","text":"<ul> <li>Fixed incorrect sourcetype transform for modular input - issue #41</li> <li>Increased the truncate limit to allow large events.</li> </ul>"},{"location":"reference/releases/release-history/#v140-may-27-2021","title":"v1.4.0 May 27, 2021","text":"<ul> <li>Added modular input to pull system information (Available Updates, Versions, Installed Packages/Plugins).</li> <li>Updated the suricata sourcetyper to recognize the json data without the standard syslog message header.</li> <li>Fixed ipv6 ICMP events not extracting properly - issue #37</li> </ul>"},{"location":"reference/releases/release-history/#v132-dec-14-2020","title":"v1.3.2 Dec 14, 2020","text":"<ul> <li>Added meta field for event length (opnsense_event_length).</li> <li>Added sourcetype for Syslog-ng logs (opnsense:syslog).</li> <li>Added action for \"Redirect\" if port forwarding logging rules exist.</li> <li>Fixed \"unknown\" severity for opnsense:suricata:json events - issue #27.</li> <li>Fixed IGMP events not being extracted - issue #32.</li> <li>Fixed Access logs not being extracted - issue #35.</li> </ul>"},{"location":"reference/releases/release-history/#v131-oct-31-2020","title":"v1.3.1 Oct 31, 2020","text":"<ul> <li>fixed KV_MODE for opnsense:unbound sourcetype.</li> </ul>"},{"location":"reference/releases/release-history/#v130-aug-15-2020","title":"v1.3.0 Aug 15, 2020","text":"<ul> <li>Added compatibility for eve syslog format for Suricata events.</li> <li>Removed incorrect field extraction for DHCP events.</li> </ul>"},{"location":"reference/releases/release-history/#v129-aug-5-2020","title":"v1.2.9 Aug 5, 2020","text":"<ul> <li>Added compatibility for new syslog format released in OPNSense v20.7.</li> <li>Updated the 'vendor_options' field to be multi-valued.</li> <li>Appinspect fixes.</li> </ul>"},{"location":"reference/releases/release-history/#v127-jul-15-2020","title":"v1.2.7 Jul 15, 2020","text":"<ul> <li>Removed Dependency for CIM app.</li> <li>Fixed multiple regex statements under one stanza.</li> </ul>"}]}